enum Goods {
    Food, Milk, Water, Paper, Steel, Luxuries
}

Product {
    kind: Good.milk
    curPrice: 10
    lastPrice: 5
    rareity: 1
}

Demand {
    product: Milk
    qty: 10
    timeRemaining: 1
    mulitplier: 1.0
}

City {
    Offers: [Milk, Paper, Steel]
    Demands: [Luxuries]
    demandMultiplier: 1
    cityGrowth: 0.0005
}

Message {
    "Hope demands Milk and will pay double what it normally would for the next 3 days"
}

city1 = Hope 
{ offers: x units of Milk at price: y }
{ demands: 2 luxuries will pay z }

----------

typescript:

// Enums for common types
enum GoodType {
  Food,
  Water,
  Cloth,
  Metal,
  Luxuries,
  // ... other types of goods
}

// Basic Good model
interface Good {
  type: GoodType;
  name: string;
  basePrice: number;
}

// Demand model
interface Demand {
  good: GoodType;
  quantity: number;
  priceMultiplier: number;
}

// City model
interface City {
  name: string;
  availableGoods: Good[];
  demands: Demand[];
}

// Player model
interface Player {
  name: string;
  money: number;
  inventory: InventoryItem[];
  currentCity: City;
}

// Inventory item (for player's inventory)
interface InventoryItem {
  good: Good;
  quantity: number;
}

// Game state model
interface GameState {
  player: Player;
  cities: City[];
  currentTurn: number;
}